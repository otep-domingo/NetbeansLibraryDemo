/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package librarydemo;

import java.awt.Component;
import java.awt.TrayIcon;
import java.sql.ResultSetMetaData;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.sql.PreparedStatement;
import java.util.HashMap;
import java.util.Map;
import java.util.Vector;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JComboBox;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.plaf.basic.BasicComboBoxRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author joseph
 */
public class Books extends javax.swing.JFrame {

    /**
     * Creates new form Books
     */
    public Books() {
        initComponents();
        populateTable("");//calling or invoking the function
        populateAuthor();
    }

    //function to populate the table
    private void populateTable(String searchkey) {
        try {
            MyConnection cc = new MyConnection();
            Connection con = DriverManager.getConnection(cc.getConnection() + cc.getDatabase(),
                    cc.getDatabaseUsername(),
                    cc.getDatabasePassword());
            Statement st = con.createStatement();
            String sql = "";
            if(searchkey.equals("")){
                sql = "SELECT books.id, books.title, authors.name, books.category, books.summary, books.borrowed FROM BOOKS inner join authors on books.author_id = authors.id";
            }else{
                sql = "SELECT books.id, books.title, authors.name, books.category, books.summary, books.borrowed "
                        + "FROM BOOKS inner join authors on books.author_id = authors.id "
                        + "WHERE title like '%" + searchkey +"%'";
            }
            ResultSet rs = st.executeQuery(sql);

            //Retrieving the ResultSetMetadata object
            ResultSetMetaData rsMetaData = rs.getMetaData();
            //Retrieving the list of column names
            int count = rsMetaData.getColumnCount();

            DefaultTableModel model = new DefaultTableModel();
            jTblBooks.setModel(model);
            //recreate the columns
            for (int i = 1; i <= count; i++) {
                model.addColumn(rsMetaData.getColumnName(i));
            }
            //retrieve the records and display to table
            while (rs.next()) {
                String[] record = new String[count];
                for (int i = 0; i < count; i++) {
                    record[i] = rs.getString(i + 1);
                }
                //cache.add(record);
                model.addRow(record);
            }

            rs.close();
            st.close();
            con.close();
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    private void populateAuthor() {
        try {
            MyConnection cc = new MyConnection();
            Connection con = DriverManager.getConnection(cc.getConnection() + cc.getDatabase(),
                    cc.getDatabaseUsername(),
                    cc.getDatabasePassword());
            Statement st = con.createStatement();
            String sql = "Select * from authors";
            ResultSet rs = st.executeQuery(sql);

            DefaultComboBoxModel model = new DefaultComboBoxModel();

            while (rs.next()) {
                model.addElement(new ItemKeyValue(
                        rs.getString("id"),
                        rs.getString("name")
                ));
            }
            jCboAuthor.setModel(model);
            rs.close();
            st.close();
            con.close();
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTblBooks = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jTxtSearch = new javax.swing.JTextField();
        jBtnSearch = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jTxtBookId = new javax.swing.JTextField();
        jTxtTitle = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jTxtCategory = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTxtSummary = new javax.swing.JTextArea();
        jBtnInsert = new javax.swing.JButton();
        jBtnUpdate = new javax.swing.JButton();
        jBtnDelete = new javax.swing.JButton();
        jBtnBorrow = new javax.swing.JButton();
        jCboAuthor = new javax.swing.JComboBox<>();
        jBtnRefresh = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Books");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel1.setText("Books");

        jTblBooks.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "A", "B", "Title 3", "Title 4"
            }
        ));
        jTblBooks.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTblBooks.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTblBooksMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTblBooks);

        jLabel2.setText("Enter search keyword");

        jBtnSearch.setText("Search");
        jBtnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnSearchActionPerformed(evt);
            }
        });

        jLabel3.setText("Book ID");

        jTxtBookId.setEnabled(false);

        jLabel4.setText("Title");

        jLabel5.setText("Author");

        jLabel6.setText("Category");

        jLabel7.setText("Summary");

        jTxtSummary.setColumns(20);
        jTxtSummary.setRows(5);
        jScrollPane2.setViewportView(jTxtSummary);

        jBtnInsert.setText("Insert");
        jBtnInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnInsertActionPerformed(evt);
            }
        });

        jBtnUpdate.setText("Update");
        jBtnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnUpdateActionPerformed(evt);
            }
        });

        jBtnDelete.setText("Delete");
        jBtnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnDeleteActionPerformed(evt);
            }
        });

        jBtnBorrow.setText("Borrow");

        jBtnRefresh.setText("Refresh");
        jBtnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnRefreshActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(jTxtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtnSearch)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jBtnRefresh))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 548, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(231, 231, 231)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTxtTitle, javax.swing.GroupLayout.DEFAULT_SIZE, 306, Short.MAX_VALUE)
                                    .addComponent(jTxtBookId)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel6)
                                            .addComponent(jLabel5))
                                        .addGap(18, 18, 18))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel7)
                                        .addGap(15, 15, 15)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jScrollPane2)
                                    .addComponent(jTxtCategory, javax.swing.GroupLayout.DEFAULT_SIZE, 306, Short.MAX_VALUE)
                                    .addComponent(jCboAuthor, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(55, 55, 55)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jBtnInsert, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBtnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBtnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBtnBorrow, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(11, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jTxtBookId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jTxtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBtnSearch)
                            .addComponent(jBtnRefresh))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3)))
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jTxtTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtnInsert))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5)
                        .addComponent(jBtnUpdate))
                    .addComponent(jCboAuthor, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jTxtCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtnDelete))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtnBorrow))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
//populateTable();
    }//GEN-LAST:event_formWindowOpened

    private void jBtnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnRefreshActionPerformed
        // TODO add your handling code here:
        populateTable("");
    }//GEN-LAST:event_jBtnRefreshActionPerformed

    private void jBtnInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnInsertActionPerformed

        //set the insert statement
        String sql = "Insert into books (title, author_id, category, summary) values (?,?,?,?)";
        try {
            MyConnection cc = new MyConnection();
            Connection con = DriverManager.getConnection(cc.getConnection() + cc.getDatabase(),
                    cc.getDatabaseUsername(),
                    cc.getDatabasePassword());
            PreparedStatement pst = con.prepareStatement(sql);
            //get the selected author
            ItemKeyValue auth = (ItemKeyValue) jCboAuthor.getSelectedItem();

            System.out.println("ID: " + auth.getKey());
            pst.setString(1, jTxtTitle.getText());
            pst.setInt(2, Integer.parseInt(auth.getKey()));
            pst.setString(3, jTxtCategory.getText());
            pst.setString(4, jTxtSummary.getText());

            int row = pst.executeUpdate();
            //call the populateTable to refresh the content
            populateTable("");

            pst.close();
            con.close();
            JOptionPane.showMessageDialog(rootPane, row + "  record/s added.",
                        "Record deleted",
                        JOptionPane.INFORMATION_MESSAGE);
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jBtnInsertActionPerformed

    private void jTblBooksMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTblBooksMouseClicked
        // TODO add your handling code here:
        int row = jTblBooks.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) jTblBooks.getModel();

        jTxtBookId.setText(model.getValueAt(row, 0).toString());
        jTxtTitle.setText(model.getValueAt(row, 1).toString());
        jTxtCategory.setText(model.getValueAt(row, 3).toString());
        jTxtSummary.setText(model.getValueAt(row, 4).toString());
        String author = model.getValueAt(row, 2).toString();
                
        DefaultComboBoxModel cModel = (DefaultComboBoxModel) jCboAuthor.getModel();
        ItemKeyValue currentAuthor = new ItemKeyValue("0","null");
        for(int i=0;i<cModel.getSize();i++){
            ItemKeyValue kv = (ItemKeyValue)cModel.getElementAt(i);
            if(author.equals(kv.getValue())){
                currentAuthor = kv;
                break;
            }
        }
        jCboAuthor.getModel().setSelectedItem(currentAuthor);
    }//GEN-LAST:event_jTblBooksMouseClicked

    private void jBtnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnUpdateActionPerformed
        //set the insert statement
        String sql = "Update books set title=?, author_id =?, category=?, summary=? where id=?";
        try {
            MyConnection cc = new MyConnection();
            Connection con = DriverManager.getConnection(cc.getConnection() + cc.getDatabase(),
                    cc.getDatabaseUsername(),
                    cc.getDatabasePassword());
            PreparedStatement pst = con.prepareStatement(sql);
            //get the selected author
            ItemKeyValue auth = (ItemKeyValue) jCboAuthor.getSelectedItem();

            System.out.println("ID: " + auth.getKey());
            pst.setString(1, jTxtTitle.getText());
            pst.setInt(2, Integer.parseInt(auth.getKey()));
            pst.setString(3, jTxtCategory.getText());
            pst.setString(4, jTxtSummary.getText());
            pst.setInt(5, Integer.parseInt(jTxtBookId.getText()));

            int row = pst.executeUpdate();
            //call the populateTable to refresh the content
            populateTable("");

            pst.close();
            con.close();
            JOptionPane.showMessageDialog(rootPane, row + "  record/s updated.",
                        "Record deleted",
                        JOptionPane.INFORMATION_MESSAGE);
        } catch (SQLException e) {
            e.printStackTrace();
        }

    }//GEN-LAST:event_jBtnUpdateActionPerformed

    private void jBtnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnDeleteActionPerformed
        // TODO add your handling code here:
        //do a confirmation
        int answer = JOptionPane.showConfirmDialog(rootPane, "Are you sure you want to delete the record?",
                "Confirm Delete",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE);
        if (answer == JOptionPane.YES_OPTION) {
            String sql = "Delete from books where id=?";
            try {
                MyConnection cc = new MyConnection();
                Connection con = DriverManager.getConnection(cc.getConnection() + cc.getDatabase(),
                        cc.getDatabaseUsername(),
                        cc.getDatabasePassword());
                PreparedStatement pst = con.prepareStatement(sql);
                //get the selected author
                pst.setInt(1, Integer.parseInt(jTxtBookId.getText()));

                int row = pst.executeUpdate();
                //call the populateTable to refresh the content
                populateTable("");

                pst.close();
                con.close();
                JOptionPane.showMessageDialog(rootPane, row + "  record/s deleted.",
                        "Record deleted",
                        JOptionPane.INFORMATION_MESSAGE);
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_jBtnDeleteActionPerformed

    private void jBtnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnSearchActionPerformed
        // TODO add your handling code here:
        populateTable(jTxtSearch.getText());
    }//GEN-LAST:event_jBtnSearchActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Books.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Books.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Books.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Books.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Books().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtnBorrow;
    private javax.swing.JButton jBtnDelete;
    private javax.swing.JButton jBtnInsert;
    private javax.swing.JButton jBtnRefresh;
    private javax.swing.JButton jBtnSearch;
    private javax.swing.JButton jBtnUpdate;
    private javax.swing.JComboBox<String> jCboAuthor;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTblBooks;
    private javax.swing.JTextField jTxtBookId;
    private javax.swing.JTextField jTxtCategory;
    private javax.swing.JTextField jTxtSearch;
    private javax.swing.JTextArea jTxtSummary;
    private javax.swing.JTextField jTxtTitle;
    // End of variables declaration//GEN-END:variables
}
